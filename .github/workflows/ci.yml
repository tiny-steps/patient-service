name: Build, Push, and Deploy patient Service
env:
  SERVICE_NAME: ts-patient-service
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.generate_tag.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          cache: "maven"

      - name: Debug repository structure
        run: |
          echo "Current directory:"
          pwd
          echo "Repository structure:"
          find . -name "common" -type d
          echo "Looking for pom.xml files:"
          find . -name "pom.xml" | head -10
          
      - name: Build and install common module
        run: |
          # Try to find the common directory
          if [ -d "server/common" ]; then
            echo "Found server/common directory"
            cd server/common
          elif [ -d "common" ]; then
            echo "Found common directory at root"
            cd common
          else
            echo "ERROR: Cannot find common directory"
            echo "Available directories:"
            ls -la
            exit 1
          fi
          mvn clean install -DskipTests

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate image tag
        id: generate_tag
        run: |
          TIMESTAMP=$(date +'%Y%m%d%H%M%S')
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          echo "tag=${SHORT_SHA}-${TIMESTAMP}" >> $GITHUB_OUTPUT

      - name: Build and push image with Jib
        run: |
          IMAGE_NAME="${{ env.DOCKERHUB_USERNAME }}/${{ env.SERVICE_NAME }}"
          IMAGE_TAG="${{ steps.generate_tag.outputs.tag }}"
          cd server/patient-service
          mvn compile com.google.cloud.tools:jib-maven-plugin:build -Dimage="${IMAGE_NAME}:${IMAGE_TAG}"

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Configure Kubernetes cluster connection
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: Deploy to Kubernetes using Kustomize
        run: |
          IMAGE_TAG="${{ needs.build-and-push.outputs.tag }}"
          cd server/patient-service/k8s

          # Use kustomize to set the new image tag dynamically
          kustomize edit set image tinystepsd3v/ts-patient-service:${IMAGE_TAG}

          # Apply all the manifests in the k8s directory
          kubectl apply -k . --validate=false
